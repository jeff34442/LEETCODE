Problem:
Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.

 

Example 1:

Input: n = 2
Output: [0,1,1]
Explanation:
0 --> 0
1 --> 1
2 --> 10
Example 2:

Input: n = 5
Output: [0,1,1,2,1,2]
Explanation:
0 --> 0
1 --> 1
2 --> 10
3 --> 11
4 --> 100
5 --> 101
 

Constraints:

0 <= n <= 105


Solution:
In the given solution, an array [0,1] is initialized as our base case. For any given n >=1, our array will always start with those values. 
We then check if n is equal to 0 or 1. If it is 0, then we return [0]. If n is 1, we return our base case. 
If n is larger than 1, we convert the index into binary. This output is a string and contains a '0b' as the first two characters. We remove those characters and all zeros in the binary representation.
Finally we take the length which will give us the total number of 1's. This length output is appended to the output_array base case. 